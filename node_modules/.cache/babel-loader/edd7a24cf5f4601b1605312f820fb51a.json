{"ast":null,"code":"import _slicedToArray from\"/Users/niknesladek/code/react-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var api={key:\"9c82a2dfa2e9bcf10c838e6083d3128d\",base:\"https://api.openweathermap.org/data/2.5/\"};function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),weather=_useState4[0],setWeather=_useState4[1];var search=function search(event){if(event.key===\"Enter\"){fetch(\"\".concat(api.base,\"weather?q=\").concat(query,\"&units=imperial&appid=\").concat(api.key)).then(function(res){return res.json();}).then(function(result){setWeather(result);setQuery(\"\");console.log(result);});}};var dateBuilder=function dateBuilder(d){var months=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"November\",\"December\"];var days=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var day=days[d.getDay()];var date=d.getDate();var month=months[d.getMonth()];var year=d.getFullYear();return\"\".concat(day,\", \").concat(date,\" \").concat(month,\", \").concat(year);};return/*#__PURE__*/_jsx(\"div\",{className:typeof weather.main!=\"undefined\"?weather.main.temp>60?\"app-warm\":\"app-cold\":\"app-warm\",children:/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"search-box\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"search-bar\",placeholder:\"Enter a city\",onChange:function onChange(e){return setQuery(e.target.value);},value:query,onKeyPress:search})}),typeof weather.main!=\"undefined\"?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"location-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"location\",children:[weather.name,\", \",weather.sys.country]}),/*#__PURE__*/_jsx(\"div\",{className:\"date\",children:dateBuilder(new Date())})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"weather-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"temperature\",children:[Math.round(weather.main.temp),\"\\xB0F\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"weather\",children:weather.weather[0].main}),/*#__PURE__*/_jsx(\"div\",{className:\"weather-icon\",children:/*#__PURE__*/_jsx(\"img\",{src:\"http://openweathermap.org/img/wn/\"+weather.weather[0].icon+\"@2x.png\",alt:\"\"})})]})]}):\"\"]})});}export default App;","map":{"version":3,"sources":["/Users/niknesladek/code/react-weather/src/App.js"],"names":["React","useState","api","key","base","App","query","setQuery","weather","setWeather","search","event","fetch","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","main","temp","e","target","value","name","sys","country","Date","Math","round","icon"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst api = {\n  key: \"9c82a2dfa2e9bcf10c838e6083d3128d\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const search = (event) => {\n    if (event.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=imperial&appid=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result);\n          setQuery(\"\");\n          console.log(result);\n        });\n    }\n  };\n\n  const dateBuilder = (d) => {\n    let months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"November\",\n      \"December\",\n    ];\n    let days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day}, ${date} ${month}, ${year}`;\n  };\n  return (\n    <div\n      className={\n        typeof weather.main != \"undefined\"\n          ? weather.main.temp > 60\n            ? \"app-warm\"\n            : \"app-cold\"\n          : \"app-warm\"\n      }\n    >\n      <main>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Enter a city\"\n            onChange={(e) => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div>\n        {typeof weather.main != \"undefined\" ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">\n                {weather.name}, {weather.sys.country}\n              </div>\n              <div className=\"date\">{dateBuilder(new Date())}</div>\n            </div>\n            <div className=\"weather-box\">\n              <div className=\"temperature\">\n                {Math.round(weather.main.temp)}Â°F\n              </div>\n              <div className=\"weather\">{weather.weather[0].main}</div>\n              <div className=\"weather-icon\">\n                <img\n                  src={\n                    \"http://openweathermap.org/img/wn/\" +\n                    weather.weather[0].icon +\n                    \"@2x.png\"\n                  }\n                  alt=\"\"\n                />\n              </div>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}